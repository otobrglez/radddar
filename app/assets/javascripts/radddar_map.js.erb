/* By Oto Brglez - <oto.brglez@opalab.com> */

var RadddarMap = new function(){

	/* Actual map */
	this.map = null;
	this.markers = null;
	this.marker_clusterer = null;

	/* Map options */
	this.options = {
		center: new google.maps.LatLng(-34.397, 150.644),
		zoom: 8,
		mapTypeId: google.maps.MapTypeId.ROADMAP
	};


	/* Set the clusterer from other class */
	this.set_clusterer = function(){

		var styles = [{
	        url: '<%= asset_path("box_m1.png") %>',
	        height: 68, width: 58, anchor: [20, 25], textColor: '#000000', textSize: 16},
	       	{url: '<%= asset_path("box_m1.png") %>',
	        height: 68, width: 58, anchor: [20, 25], textColor: '#000000', textSize: 16},
	       	{url: '<%= asset_path("box_m1.png") %>',
	        height: 68, width: 58, anchor: [20, 25], textColor: '#000000', textSize: 16},
	       	{url: '<%= asset_path("box_m1.png") %>',
	        height: 68, width: 58, anchor: [20, 25], textColor: '#000000', textSize: 16}	        	        
      	];

		RadddarMap.marker_clusterer = new MarkerClusterer(
			RadddarMap.map, RadddarMap.markers,{ styles: styles }
		);

		/*	,{ imagePath: ('<%= asset_path("box_m.png") %>').replace("m.png","m") } */
	};

	/* Initialize map */
	this.initialize = function(options){
		if(typeof(options) != "undefined")
			this.options = $.extend(this.options, options);

		this.map = new google.maps.Map(document.getElementById("map"),this.options);
		
		this.markers = new Array();
		
		//TODO: clusterer does not work on this point.
		
		Status.update_swap();
	};


	/* Reload markers from list */
	this.reload_markers = function(){
		this.remove_all_markers();
		var users = User.live_users_from_list();
		for(var i in users){
			this.add_user_marker(users[i]);
		};

		/* Add me on top */
	}

	/* Make marker for user */
	this.build_marker_for = function(user){
		var bg_image_str = {
			male: '<%= asset_path("n_box_c.png") %>',
			female: '<%= asset_path("n_box_r.png") %>',
			none: '<%= asset_path("n_box_b.png") %>',
			off: '<%= asset_path("n_box_g.png") %>'
		};

		/* CHANGE this and you DIE on the SPOT */
		var bg_image = new google.maps.MarkerImage(bg_image_str[user.gender],
			new google.maps.Size(58,68),	// OLD: 52,63
			new google.maps.Point(0, 0), 	// Origin // OLD 0,0
			new google.maps.Point(28, 67) 	// anchor // OLD 26,62
		);

		var user_image = new google.maps.MarkerImage(user.image,
			new google.maps.Size(60, 50),	// 50,50 // sirina , visina
			new google.maps.Point(0, 0),	// Origin
			new google.maps.Point(24, 63) 	// Anchor 23,62
		);

		return { bg_image: bg_image, image:user_image };
	};

	/* Add marker to map */
	this.add_user_marker = function(user,offline){
		var loc = new google.maps.LatLng(user.loc[0],user.loc[1]);

		var off = (typeof(offline)!="undefined" && offline==true)?true:false;
		if(off) user.gender = "off";

		var images = this.build_marker_for(user);

		var marker = new google.maps.Marker({
		  position: loc,
		  map: RadddarMap.map,
		  icon: images.image,
		  shadow: images.bg_image,
		  title: user.to_s,
		  id: user.id
		});

		this.markers.push(marker);
		marker.setMap(this.map);

		google.maps.event.addListener(marker,'click',RadddarMap.marker_click);
	};

	/* Remove all markers */
	this.remove_all_markers = function(){
		if(this.markers){
			for(var i in this.markers){
				this.markers[i].setMap(null);
			};
			this.markers = new Array();
		};

		if(this.marker_clusterer) {
        	this.marker_clusterer.clearMarkers();
        };
	};

	/* Remove marker from map */
	this.remove_marker = function(data){

	};

	/* Move to point */
	this.move_to_point = function(data){
		if(data.length!=2) return;
		var point = new google.maps.LatLng(data[0],data[1]);
  		this.map.setCenter(point);
	};

	/* Move and save point to current location */
	this.move_to_point_and_save = function(data){
		CurrentUser.set({loc:data},function(n_data){
			RadddarMap.move_to_point(n_data.loc);
			Status.update_swap(function(){
				/* This callback does not work */
			});
		});			
	};

	this.find_marker = function(marker){
		if(this.markers.length == 0) return null;
		for(var i in this.markers){
			if(marker.latLng.equals(this.markers[i].position)){
				return this.markers[i];
			};
		};
		return null;
	};

	this.refresh_location_from_browser = function(){
		if (navigator.geolocation) {
		  navigator.geolocation.getCurrentPosition(function(data){
		  	return RadddarMap.move_to_point_and_save([
		  		data.coords.latitude,
		  		data.coords.longitude]);
		  },function(data){
		  	alert("No GEO information from you :/")
		  });
		} else {
			alert("Your browser does not support GEOlocation magic :(");
		};
	};


	this.move_to_user = function(user){
		this.move_to_point(user.loc);
	};

	/* Marker click */
	this.marker_click = function(data){
		var user_marker = RadddarMap.find_marker(data);
		var user = User.from_list(user_marker);
		if(user != null && typeof(user) != "undefined"){
			$(document).trigger({
				type:"marker_clicked",
				member: user
			});
		};
	};
};